# =========================
# NGINX CONFIG - TEAManage
# =========================

events { worker_connections 1024; }

http {
  # Types & defaults
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # Logs
  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log;

  # Gzip (an toàn cho text assets)
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 1024;
  gzip_types
    text/plain text/css text/javascript application/javascript
    application/json application/xml application/xml+rss
    application/vnd.ms-fontobject application/x-font-ttf
    font/opentype application/x-web-app-manifest+json
    image/svg+xml image/x-icon;

  # Upstream backend (Spring Boot trong docker network)
  upstream backend {
    server backend:8080;
    keepalive 64;
  }

  # ------- SERVER -------
  server {
    listen 80;
    server_name _;

    # FE static root (đã mount ./front_end)
    root  /usr/share/nginx/html;
    index index.html;

    # ===========
    # BẢO MẬT CƠ BẢN
    # ===========
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    # Nếu có SPA/JS routing, đừng bật HSTS cho đến khi chắc phục vụ qua HTTPS
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # ===========
    # STATIC ASSETS (ưu tiên trước, tránh fallback nuốt file .css/.js)
    # Cache-control nhẹ nhàng cho assets, tắt log access
    # ===========
    location ~* \.(?:css|js|mjs|map|png|jpe?g|gif|ico|svg|webp|avif|woff2?|ttf|eot)$ {
      try_files $uri =404;
      access_log off;
    #   expires 7d;
    #   add_header Cache-Control "public, max-age=604800, immutable";
      expires -1;
      add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
    }

    # HTML KHÔNG CACHE (tránh giữ version cũ)
    location ~* \.(?:html)$ {
      try_files $uri =404;
      add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
    }

    # ===========
    # SPA FALLBACK (nếu có routing phía FE)
    # Nếu KHÔNG dùng SPA routing, có thể đổi thành: try_files $uri =404;
    # ===========
    location / {
      try_files $uri $uri/ /index.html;
    }

    # ===========
    # API → BACKEND
    # ===========
    location /api/ {
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_pass http://backend;
      proxy_read_timeout 120s;
      proxy_connect_timeout 5s;

      # Upload size
      client_max_body_size 20m;
    }

    # ===========
    # WEBSOCKET (nếu backend có /ws hoặc /websocket)
    # ===========
    location /ws/ {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_pass http://backend;
      proxy_read_timeout 120s;
    }

    # ===========
    # HEALTHCHECK đơn giản qua Nginx
    # ===========
    location = /nginx/health {
      access_log off;
      add_header Content-Type text/plain;
      return 200 "ok\n";
    }

    # ===========
    # LỖI CƠ BẢN
    # ===========
    error_page 404 /404.html;
    location = /404.html {
      internal;
    }
  }
}
